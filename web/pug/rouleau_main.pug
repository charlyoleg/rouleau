//- rouleau_main.pug

mixin a_refusal(name, msg)
  fieldset.refusal(class= name)
    label
      input(type='checkbox', name= name)
      = msg
    select(name= name)
      option(value='my_decision') My decision
      option(value='wording') The wording of questions and proposal is ambiguious
      option(value='missing_proposals') Important proposals are missing
      option(value='indecent') It contains indecent questions or proposals
      option(value='information') The current information on this topic is too bad
      option(value='debat') The current debat on this topic is too bad
      option(value='several') For several of the above reasons
      option(value='other') For other reasons

mixin final_action
  +a_refusal('final_refusal', "I don't want to participate to this vote. Some hints:")
  .action_bar
    .one_button
      button.action_button_reset(type='button') Reset
    .one_status
      span.action_status No submitted entries
    .one_button
      button.action_button_submit(type='button') Submit
  .result
    output Undeclared views
  .log

mixin majority_judgment(name)
  select.majority_judgment(name= name)
    option(value='excellent') excellent (4)
    option(value='very-good') very good (3)
    option(value='good') good (2)
    option(value='passable') passabe (1)
    option(value='don-t-care') don't care (0)
    option(value='bad') bad (-2)
    option(value='very-bad') very bad (-4)
    option(value='don-t-know') don't know (?)
    option(value='indecent') indecent (-99)

mixin importance(name)
  select.importance(name= name)
    option(value='primordial') primordial
    option(value='very-important') very important
    option(value='important') important
    option(value='nice-to-have') nice-to-have
    option(value='don-t-care', selected=true) don't care
    option(value='not-important') not important
    option(value='should-not-be-considered') should not be considered
    option(value='don-t-know') don't know

mixin priority(name)
  select.priority(name= name)
    option(value='urgent') urgent
    option(value='high-priority') high-priority
    option(value='medium-priority') medium priority
    option(value='low-priority') low priority
    option(value='don-t-care', selected=true) don't care
    option(value='not a priority') not a priority
    option(value='should-not-be-implemented') should not be implemented
    option(value='don-t-know') don't know

mixin budget(name)
  span.budget
    input(type='range', min='0', max='100', step='1')
    | % Up to EUR
    input(type='number', placeholder='0.00', min='0', step='0.01', value='0')

mixin point(name)
  input(type='number', placeholder='0', min='0', max='10', step='1')


main
  nav.navigo
    a(href='#') Top
    a(href='#layout-explanations') Layout
    a(href='#a-proposal') Proposal
    a(href='#survey-1') Survey-1
    a(href='#survey-2') Survey-2
    a(href='#survey-3') Survey-3
    a(href='#proposal-preparation') Proposal Preparation
    a(href='#importance') Importances
    a(href='#priority') Priorities
    a(href='#budget') Budget
    a(href='#points') Points
    a(href='#rest-js') Rest-js
    a(href='#rest-py') Rest-py
    a(href='#apropos') Apropos
  main.core_columns
    aside.left_side_shutter
      input#left_side_checkbox(type='checkbox', checked=true)
      label.side_checkbox_label(for='left_side_checkbox')
      aside.left_side
        include left_side.pug
    main.core

      .water#layout-explanations
        .island
          h1 The Rouleau's layout
          h2 Explanations of the layout of this SPA
          h3 The global layout
          p Per definition and per concept a single-page-application is from the DOM point of view a single HTML page, i.e. a single DOM. When the application is running, the structure and/or the appearance of this HTML page might change drastically through the effect of the javascript code. From the user point of view it may look like several HTML pages. This confusion is reinforced if the URL routes are matching with the several faces of the applications.
          p For Rouleau, we want to minimize the javascript overlay and stick to the default behavior of the browser. That's means that:
          ul
            li all sub-pages (a.k.a. faces or islands) of the application are always visible
            li the javascript doesn't do any url-route interpretation
            li
              | the hashtags of the url point to the different sub-pages just by using the html attribute 
              i id
            li the vertical scrollbar lets you navigate through the complete application i.e. over all sub-pages
            li the menu consists of simple html links pointing to the according hashtags
          h3 The island layout
          img(src='img/island_layout.svg', alt='the island layout')
          p The layout of an island is composed of the following elements:
          ul
            li a title
            li a small introduction or explanation text
            li a form where the user enters his choices
            li an output field for the current selected statements
            li a status field that shows if the input-form and output-statements are in sync
            li a submit button that updates the output statements according to the input form
            li a reset button that updates the input form back to the current output statements
            li an optional log field that could help for debug or a more transparent user experience
          .action_bar
            .one_button
              button.action_button_reset(type='button') Back
            .one_status
              span.action_status
            .one_button
              button.action_button_submit(type='button') Next

      .water#a-proposal
        .island
          h1 A proposal
          p The last local assembly has suggested the following proposal:
          blockquote "Any blue swimming trunks will be prohibited in all public baths of the city."
          form
            fieldset
              p.process_question Do you agree with the following proposal?
              label
                input(type='radio', name='radio_prop1', value='yes')
                |  I approve this proposal
                br
              label
                input(type='radio', name='radio_prop1', value='no')
                |  I disapprove this proposal.
                br
              label
                input(type='radio', name='radio_prop1', value='blank', checked=true)
                |  Blank vote: I let my fellow citizens decide for me.
                br
          +final_action

      .water#survey-1
        .island
          h1 First survey
          p What are your preferences regarding the public baths of the city?
          form
            fieldset
              p The shape of the pool should be
                select(name='survey1_dropdown1')
                  option(value='triangle') triangle
                  option(value='round') round
                  option(value='square') square
                  option(value='rectangle') rectangle
              p Your favorite pool configuration is
                select(name='survey1_dropdown2')
                  option(value='i3e0') 3 internal pools
                  option(value='i2e1') 2 internal pools and 1 external pool
                  option(value='i2e2') 2 internal and 2 external pools
                  option(value='i0e3') 3 external pools
                  option(value='i0e0') not relevant for me
              p Your preferred equipment
                select(name='survey1_dropdown3')
                  option(value='slide') slide
                  option(value='board') diving board
                  option(value='jacuzzi') jacuzzi
                  option(value='dont_care') don't care
          +final_action

      .water#survey-2
        .island
          h1 Second survey
          p.vote_question Which game would you like to play?
          form
            fieldset
              p.pre_majority_judgment football
                +majority_judgment('football')
              p.pre_majority_judgment p√©tanque
                +majority_judgment('petanque')
              p.pre_majority_judgment belote
                +majority_judgment('belote')
              p.pre_majority_judgment marelle
                +majority_judgment('marelle')
              p.pre_majority_judgment uno
                +majority_judgment('uno')
          +final_action

      .water#survey-3
        .island
          h1 Third survey
          p What are your preferences regarding the public baths of the city?
          | Same questions as the first survey but in an other format.
          form
            fieldset
              p.vote_question How should be the shape of the pool?
              fieldset.question1
                p.pre_majority_judgment triangle
                  +majority_judgment('shape_triangle')
                p.pre_majority_judgment round
                  +majority_judgment('shape_round')
                p.pre_majority_judgment square
                  +majority_judgment('shape_square')
                p.pre_majority_judgment rectangle
                  +majority_judgment('shape_rectangle')
              +a_refusal('question1_refusal', "I don't want to vote to this question. Hints:")
              p.vote_question How will be the configuration of the pools?
              fieldset.question2
                p.pre_majority_judgment 3 internal pools
                  +majority_judgment('conf_3i0e')
                p.pre_majority_judgment 2 internal pools and 1 external pool
                  +majority_judgment('conf_2i1e')
                p.pre_majority_judgment 2 internal and 2 external pools
                  +majority_judgment('conf_2i2e')
                p.pre_majority_judgment 3 external pools
                  +majority_judgment('conf_3e')
                p.pre_majority_judgment not relevant for me
                  +majority_judgment('conf_dontcare')
              +a_refusal('question2_refusal', "I don't want to vote to this question. Hints:")
              p.vote_question Which equipment do you want?
              fieldset.question3
                p.pre_majority_judgment slide
                  +majority_judgment('equip_slide')
                p.pre_majority_judgment diving board
                  +majority_judgment('equip_board')
                p.pre_majority_judgment jacuzzi
                  +majority_judgment('equip_jacuzzi')
                p.pre_majority_judgment don't care
                  +majority_judgment('equip_dontcare')
              +a_refusal('question3_refusal', "I don't want to vote to this question. Hints:")
          +final_action

      .water#proposal-preparation
        .island
          h1 The preparation of a proposal
          p.vote_question What will be the exact wording of the proposal?
          form
            fieldset
              p.pre_majority_judgment "Any blue swimming trunks will be prohibited in all public baths of the city."
                +majority_judgment('prop1')
              p.pre_majority_judgment "Any blue swimming trunks will be prohibited in one public baths of the city."
                +majority_judgment('prop2')
              p.pre_majority_judgment "Any blue swimming trunks will be prohibited in all public sona of the city."
                +majority_judgment('prop3')
              p.pre_majority_judgment "Any dark blue swimming trunks will be prohibited in all public baths of the city."
                +majority_judgment('prop4')
          +final_action

      .water#importance
        .island
          h1 An importance list
          p.vote_question What are the most important aspects to be considered in the design of the new public bath?
          form
            fieldset
              .drag(draggable='true') the equipement
                +importance('equipement')
              .drag(draggable='true') the sizes of baths
                +importance('size')
              .drag(draggable='true') the number of baths
                +importance('number')
              .drag(draggable='true') indoor/outdoor
                +importance('indoor-outdoor')
          .form_status
            span Positions and drop-down selections don't fit
            button(type='button') Reorder the items according to the drop-down
          +final_action

      .water#priority
        .island
          h1 A priority list
          p What are your priorities for the scout camp?
          form
            fieldset
              .drag(draggable='true') play guitar and sing songs with comrade
                +priority('guitar-songs')
              .drag(draggable='true') walks through the mountains
                +priority('walks')
              .drag(draggable='true') build a nice camp
                +priority('building')
              .drag(draggable='true') long campfire evening
                +priority('campfire')
              .drag(draggable='true') great games
                +priority('games')
              .drag(draggable='true') play sport
                +priority('sport')
          .form_status
            span Positions and drop-down selections don't fit
            button(type='button') Reorder the items according to the drop-down
          +final_action

      .water#budget
        .island
          h1 Budgetary orientations
          p How should we spend the money of the scout camp?
          form
            fieldset
              p food
                +budget('food')
              p a new compass
                +budget('compass')
              p a rubber dinghy
                +budget('rubber-dinghy')
              p team flags
                +budget('flags')
              p a football ball
                +budget('ball')
              p a song book
                +budget('song-book')
              p a axe
                +budget('axe')
          .form_status Total of the budget proposal
          +final_action

      .water#points
        .island
          h1 Vote for the great game thematic
          p Which subject do we choose for the final great game of the camp?
          form
            fieldset
              p The jungle book
                +point('mowgli')
              p The stars in the sky
                +point('stars')
              p The indian ocean
                +point('ocean')
              p scandinavian food
                +point('scandinavian')
              p forest and wolfs
                +point('wolfs')
              p exotic fish
                +point('exotic')
              p caribean voodoo
                +point('voodoo')
              p b√©cassine
                +point('becassine')
          .form_status Total of your point is 10: Great!
          +final_action

      .water#rest-js
        .island
          h1 Playing with the Rest-js server
          p A rest-service to count poks and send messages
          .restjs_receiver
            .flex_for_one
              button(type='button') Get info from the Rest-js-server
            .restjs_receiver_log
              p Today we have 5 poks
              p 2019/07/21 : Joyeuse fete les Belges
              p 2019/07/22 : C'est lundi
          .restjs_pok
            .flex_for_one
              button(type='button') Pok the Rest-js-server
          .restjs_message
            p Write a message to the world:
            .flex_for_two
              input(type='text')
              button(type='button') Send the message to the Rest-js-server

      .water#rest-py
        .island
          h1 Playing with the Rest-py server
          p A rest-service to count the donations
          .restpy_receiver
            .flex_for_one
              button(type='button') Get info from the Rest-py-server
            .restpy_receiver_log
              p Total receive donation: 23.20 EUR
              p 2019/07/19 : 2.50 EUR
              p 2019/07/21 : 7.30 EUR
          .restpy_donation
            p How much to you want to give?
            .flex_for_two
              input(type='number', placeholder='0.00', min='0', step='0.01', value='0.00')
              button(type='button') Send the donation to the Rest-py-server

    aside.right_side_shutter
      input#right_side_checkbox(type='checkbox', checked=true)
      label.side_checkbox_label(for='right_side_checkbox')
      aside.right_side
        include right_side.pug


//- rouleau_main.pug

main
  nav.navigo
    a(href='#') Top
    a(href='#layout-explanations') Layout
    a(href='#a-proposal') Proposal
    a(href='#three') three
    a(href='#four') four
    a(href='#five') five
    a(href='#six') six
    a(href='#seven') seven
    a(href='#eight') eight
    a(href='#apropos') Apropos
  main.core_columns
    aside.left_side_shutter
      input#left_side_checkbox(type='checkbox', checked=true)
      label.side_checkbox_label(for='left_side_checkbox')
      aside.left_side
        include left_side.pug
    main.core
      .water#layout-explanations
        .island
          h1 The Rouleau's layout
          h2 Explanations of the layout of this SPA
          p Per definition and per concept a single-page-application is from the DOM point of view a single HTML page, i.e. a single DOM. When the application is running, the structure and/or the appearance of this HTML page might change drastically through the effect of the javascript code. From the user point of view it may look like several HTML pages. This confusion is reinforced if the URL routes are matching with the several faces of the applications.
          p For Rouleau, we want to minimize the javascript overlay and stick to the default behavior of the browser. That's means that:
          ul
            li all sub-pages (a.k.a. faces or islands) of the application are always visible
            li the javascript doesn't do any url-route interpretation
            li
              | the hashtags of the url point to the different sub-pages just by using the html attribute 
              i id
            li the vertical scrollbar lets you navigate through the complete application i.e. over all sub-pages
            li the menu consists of simple html links pointing to the according hashtags
          .action_bar
            .one_button
              button#layout_expl_back.action_button(type='button') Back
            //.one_status
            //  span#layout_expl_status.action_status Tuti bene
            .one_button
              button#layout_expl_next.action_button(type='button') Next
      .water#a-proposal
        .island
          h1 A proposal
          p The last local assembly has suggested the following proposal:
          blockquote "Any blue swimming trunks will be prohibited in all public baths of the city."
          form#prop1_form
            p Do you agree with the following proposal?
            input#prop1_yes(type='radio', name='radio_prop1', value='yes')
            label(for='prop1_yes') I approve this proposal
            br
            input#prop1_no(type='radio', name='radio_prop1', value='no')
            label(for='prop1_no') I disapprove this proposal.
            br
            input#prop1_blank(type='radio', name='radio_prop1', value='blank', checked=true)
            label(for='prop1_blank') Blank vote: I let my fellow citizens decide for me.
            br
          .action_bar
            .one_button
              button#prop1_reset.action_button(type='button') Reset
            .one_status
              span#prop1_status.action_status Vote non exprim√©
            .one_button
              button#prop1_submit.action_button(type='button') Submit
          .result
            output#prop1_result L'urne est vide.
      .water#three
        .island
          h1 A third one
          p encore des trucs
      .water#four
        .island
          h1 A fourth title
          p lali lala
      .water#five
        .island
          h1 A fifth title
          p lali lala 5
      .water#six
        .island
          h1 A sixth title
          p lali lala 6
      .water#seven
        .island
          h1 A seventh title
          p lali lala 7
      .water#eight
        .island
          h1 A eighth title
          p lali lala 8
    aside.right_side_shutter
      input#right_side_checkbox(type='checkbox', checked=true)
      label.side_checkbox_label(for='right_side_checkbox')
      aside.right_side
        include right_side.pug

